{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herbata9\\\\Desktop\\\\Filip\\\\programming\\\\strony\\\\book\\\\client\\\\src\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const prevMonth = () => {\n    setCurrentDate(prevDate => {\n      const prevMonthDate = new Date(prevDate);\n      prevMonthDate.setMonth(prevMonthDate.getMonth() - 1);\n      return prevMonthDate;\n    });\n  };\n  const nextMonth = () => {\n    setCurrentDate(prevDate => {\n      const nextMonthDate = new Date(prevDate);\n      nextMonthDate.setMonth(nextMonthDate.getMonth() + 1);\n      return nextMonthDate;\n    });\n  };\n  const month = currentDate.toLocaleString('default', {\n    month: 'long'\n  });\n  const year = currentDate.getFullYear();\n\n  // funkcja do generowania dni w miesiącu\n  const generateDaysInMonth = () => {\n    const firstDayOfMonth = new Date(year, currentDate.getMonth(), 1);\n    const lastDayOfMonth = new Date(year, currentDate.getMonth() + 1, 0);\n    const daysInMonth = lastDayOfMonth.getDate();\n    const firstDayOfWeek = firstDayOfMonth.getDay();\n    const days = [];\n\n    // Dodaj puste komórki dla dni poprzedniego miesiąca\n    for (let i = 0; i < firstDayOfWeek; i++) {\n      days.push( /*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Dodaj dni bieżącego miesiąca\n    for (let i = 1; i <= daysInMonth; i++) {\n      days.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: i\n      }, `day-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this));\n    }\n    return days;\n  };\n\n  // funkcja do dzielenia dni na wiersze\n  const divideDaysIntoRows = () => {\n    const days = generateDaysInMonth();\n    const rows = [];\n    const rowCount = Math.ceil(days.length / 7);\n    for (let i = 0; i < rowCount; i++) {\n      rows.push(days.slice(i * 7, (i + 1) * 7));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevMonth,\n        children: \"Poprzedni miesi\\u0105c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${month} ${year}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextMonth,\n        children: \"Nast\\u0119pny miesi\\u0105c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u015Ar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"So\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: divideDaysIntoRows().map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((day, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: day\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","prevMonth","prevDate","prevMonthDate","setMonth","getMonth","nextMonth","nextMonthDate","month","toLocaleString","year","getFullYear","generateDaysInMonth","firstDayOfMonth","lastDayOfMonth","daysInMonth","getDate","firstDayOfWeek","getDay","days","i","push","fileName","_jsxFileName","lineNumber","columnNumber","children","divideDaysIntoRows","rows","rowCount","Math","ceil","length","slice","onClick","map","row","index","day","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/herbata9/Desktop/Filip/programming/strony/book/client/src/Calendar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  const prevMonth = () => {\r\n    setCurrentDate(prevDate => {\r\n      const prevMonthDate = new Date(prevDate);\r\n      prevMonthDate.setMonth(prevMonthDate.getMonth() - 1);\r\n      return prevMonthDate;\r\n    });\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentDate(prevDate => {\r\n      const nextMonthDate = new Date(prevDate);\r\n      nextMonthDate.setMonth(nextMonthDate.getMonth() + 1);\r\n      return nextMonthDate;\r\n    });\r\n  };\r\n\r\n  const month = currentDate.toLocaleString('default', { month: 'long' });\r\n  const year = currentDate.getFullYear();\r\n\r\n  // funkcja do generowania dni w miesiącu\r\n  const generateDaysInMonth = () => {\r\n    const firstDayOfMonth = new Date(year, currentDate.getMonth(), 1);\r\n    const lastDayOfMonth = new Date(year, currentDate.getMonth() + 1, 0);\r\n    const daysInMonth = lastDayOfMonth.getDate();\r\n    const firstDayOfWeek = firstDayOfMonth.getDay();\r\n\r\n    const days = [];\r\n\r\n    // Dodaj puste komórki dla dni poprzedniego miesiąca\r\n    for (let i = 0; i < firstDayOfWeek; i++) {\r\n      days.push(<td key={`empty-${i}`}></td>);\r\n    }\r\n\r\n    // Dodaj dni bieżącego miesiąca\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      days.push(<td key={`day-${i}`}>{i}</td>);\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  // funkcja do dzielenia dni na wiersze\r\n  const divideDaysIntoRows = () => {\r\n    const days = generateDaysInMonth();\r\n    const rows = [];\r\n    const rowCount = Math.ceil(days.length / 7);\r\n\r\n    for (let i = 0; i < rowCount; i++) {\r\n      rows.push(days.slice(i * 7, (i + 1) * 7));\r\n    }\r\n\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={prevMonth}>Poprzedni miesiąc</button>\r\n        <h2>{`${month} ${year}`}</h2>\r\n        <button onClick={nextMonth}>Następny miesiąc</button>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Pn</th>\r\n            <th>Wt</th>\r\n            <th>Śr</th>\r\n            <th>Cz</th>\r\n            <th>Pt</th>\r\n            <th>So</th>\r\n            <th>Nd</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {divideDaysIntoRows().map((row, index) => (\r\n            <tr key={index}>\r\n              {row.map((day, index) => (\r\n                <React.Fragment key={index}>{day}</React.Fragment>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}