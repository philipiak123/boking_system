{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\boking_system-main\\\\client\\\\src\\\\DoctorVisits.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useNavigate, useParams } from 'react-router-dom'; // Importujemy hook useNavigate i useParams\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorVisits = ({\n  userData\n}) => {\n  _s();\n  const [doctorVisits, setDoctorVisits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // Inicjalizujemy hook useNavigate\n  const {\n    day\n  } = useParams(); // Wyodrębniamy datę wizyty z adresu URL\n\n  useEffect(() => {\n    const fetchDoctorVisits = async () => {\n      try {\n        if (userData && userData.typ !== \"pacjent\") {\n          // Wysyłamy zapytanie HTTP z datą wizyty do serwera\n          const response = await axios.get(`http://localhost:5000/api/doctor-visits/${userData.typ}?day=${day}`);\n          setDoctorVisits(response.data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching doctor visits:', error);\n        setLoading(false);\n      }\n    };\n    fetchDoctorVisits();\n  }, [userData, day]); // Dodajemy day do zależności useEffect, aby reagować na zmiany daty wizyty\n\n  const handleEditClick = visitId => {\n    // Przekierowanie do /edit-visit z przekazaniem id wizyty w state\n    navigate('/edit-visit', {\n      state: {\n        visitId\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wizyty lekarskie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Godzina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pacjent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edycja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctorVisits.map((visit, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: moment(visit.date).format('YYYY-MM-DD')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: visit.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: visit.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(visit.id),\n              children: \"Edytuj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorVisits, \"2uk8+dWX+Hxn8lYj47LM0l7HWh0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = DoctorVisits;\nexport default DoctorVisits;\nvar _c;\n$RefreshReg$(_c, \"DoctorVisits\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","useNavigate","useParams","jsxDEV","_jsxDEV","DoctorVisits","userData","_s","doctorVisits","setDoctorVisits","loading","setLoading","navigate","day","fetchDoctorVisits","typ","response","get","data","error","console","handleEditClick","visitId","state","children","fileName","_jsxFileName","lineNumber","columnNumber","map","visit","index","date","format","time","email","onClick","id","_c","$RefreshReg$"],"sources":["D:/Projects/boking_system-main/client/src/DoctorVisits.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useNavigate, useParams } from 'react-router-dom'; // Importujemy hook useNavigate i useParams\n\nconst DoctorVisits = ({ userData }) => {\n  const [doctorVisits, setDoctorVisits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // Inicjalizujemy hook useNavigate\n  const { day } = useParams(); // Wyodrębniamy datę wizyty z adresu URL\n\n  useEffect(() => {\n    const fetchDoctorVisits = async () => {\n      try {\n        if (userData && userData.typ !== \"pacjent\") {\n          // Wysyłamy zapytanie HTTP z datą wizyty do serwera\n          const response = await axios.get(`http://localhost:5000/api/doctor-visits/${userData.typ}?day=${day}`);\n          setDoctorVisits(response.data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching doctor visits:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDoctorVisits();\n  }, [userData, day]); // Dodajemy day do zależności useEffect, aby reagować na zmiany daty wizyty\n\n  const handleEditClick = (visitId) => {\n    // Przekierowanie do /edit-visit z przekazaniem id wizyty w state\n    navigate('/edit-visit', { state: { visitId } });\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Wizyty lekarskie</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>Godzina</th>\n            <th>Pacjent</th>\n            <th>Edycja</th>\n          </tr>\n        </thead>\n        <tbody>\n          {doctorVisits.map((visit, index) => (\n            <tr key={index}>\n              <td>{moment(visit.date).format('YYYY-MM-DD')}</td>\n              <td>{visit.time}</td>\n              <td>{visit.email}</td>\n              <td>\n                <button onClick={() => handleEditClick(visit.id)}>Edytuj</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DoctorVisits;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}