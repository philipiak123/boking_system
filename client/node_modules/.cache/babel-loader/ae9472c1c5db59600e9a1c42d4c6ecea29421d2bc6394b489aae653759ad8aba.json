{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herbata9\\\\Desktop\\\\Filip\\\\programming\\\\strony\\\\book\\\\client\\\\src\\\\DoctorVisits.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorVisits = ({\n  userData\n}) => {\n  _s();\n  const [doctorVisits, setDoctorVisits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // Inicjalizujemy hook useNavigate\n\n  useEffect(() => {\n    const fetchDoctorVisits = async () => {\n      try {\n        if (userData && userData.typ !== \"pacjent\") {\n          const response = await axios.get(`http://localhost:5000/api/doctor-visits/${userData.typ}`);\n          setDoctorVisits(response.data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching doctor visits:', error);\n        setLoading(false);\n      }\n    };\n    fetchDoctorVisits();\n  }, [userData]);\n  const handleEditClick = visitId => {\n    // Sprawdzamy, czy visitId istnieje\n    if (visitId) {\n      // Przekierowanie do /edit-visit z przekazaniem id wizyty w state\n      navigate('/edit-visit', {\n        state: {\n          visitId\n        }\n      });\n    } else {\n      // Jeśli nie ma visitId, przekierowujemy użytkownika na stronę główną\n      navigate('/');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wizyty lekarskie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Godzina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pacjent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edycja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctorVisits.map((visit, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: moment(visit.date).format('YYYY-MM-DD')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: visit.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: visit.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(visit.id),\n              children: \"Edytuj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorVisits, \"6bq5lkHYPi+0eNGWWseUeZgA5F4=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorVisits;\nexport default DoctorVisits;\nvar _c;\n$RefreshReg$(_c, \"DoctorVisits\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","moment","jsxDEV","_jsxDEV","DoctorVisits","userData","_s","doctorVisits","setDoctorVisits","loading","setLoading","navigate","fetchDoctorVisits","typ","response","get","data","error","console","handleEditClick","visitId","state","children","fileName","_jsxFileName","lineNumber","columnNumber","map","visit","index","date","format","time","email","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/herbata9/Desktop/Filip/programming/strony/book/client/src/DoctorVisits.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst DoctorVisits = ({ userData }) => {\r\n  const [doctorVisits, setDoctorVisits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate(); // Inicjalizujemy hook useNavigate\r\n\r\n  useEffect(() => {\r\n    const fetchDoctorVisits = async () => {\r\n      try {\r\n        if (userData && userData.typ !== \"pacjent\") {\r\n          const response = await axios.get(`http://localhost:5000/api/doctor-visits/${userData.typ}`);\r\n          setDoctorVisits(response.data);\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching doctor visits:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDoctorVisits();\r\n  }, [userData]);\r\n\r\n  const handleEditClick = (visitId) => {\r\n    // Sprawdzamy, czy visitId istnieje\r\n    if (visitId) {\r\n      // Przekierowanie do /edit-visit z przekazaniem id wizyty w state\r\n      navigate('/edit-visit', { state: { visitId } });\r\n    } else {\r\n      // Jeśli nie ma visitId, przekierowujemy użytkownika na stronę główną\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Wizyty lekarskie</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Data</th>\r\n            <th>Godzina</th>\r\n            <th>Pacjent</th>\r\n            <th>Edycja</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {doctorVisits.map((visit, index) => (\r\n            <tr key={index}>\r\n              <td>{moment(visit.date).format('YYYY-MM-DD')}</td>\r\n              <td>{visit.time}</td>\r\n              <td>{visit.email}</td>\r\n              <td>\r\n                <button onClick={() => handleEditClick(visit.id)}>Edytuj</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorVisits;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}