{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herbata9\\\\Desktop\\\\Filip\\\\programming\\\\strony\\\\book\\\\client\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importujemy useNavigate z react-router-dom\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate(); // Korzystamy z hooka useNavigate\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const url = 'http://localhost:5000/login';\n      const response = await axios.post(url, {\n        username: username,\n        password: password\n      });\n\n      // Sprawdzanie, czy odpowiedź jest poprawna\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n\n      // Zalogowano pomyślnie, przekieruj do strony głównej\n      console.log('Zalogowano pomyślnie');\n      navigate('/'); // Przekierowanie do strony głównej po zalogowaniu\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logowanie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nazwa u\\u017Cytkownika:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Has\\u0142o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Zaloguj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"Ensabnh8awqwln75dYV2FIvVkb0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","url","response","post","data","success","Error","message","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/herbata9/Desktop/Filip/programming/strony/book/client/src/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importujemy useNavigate z react-router-dom\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate(); // Korzystamy z hooka useNavigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const url = 'http://localhost:5000/login';\r\n      const response = await axios.post(url, {\r\n        username: username,\r\n        password: password\r\n      });\r\n\r\n      // Sprawdzanie, czy odpowiedź jest poprawna\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message);\r\n      }\r\n\r\n      // Zalogowano pomyślnie, przekieruj do strony głównej\r\n      console.log('Zalogowano pomyślnie');\r\n      navigate('/'); // Przekierowanie do strony głównej po zalogowaniu\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Logowanie</h2>\r\n      {error && <div>{error}</div>}\r\n      <div>\r\n        <label>\r\n          Nazwa użytkownika:\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Hasło:\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Zaloguj</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}