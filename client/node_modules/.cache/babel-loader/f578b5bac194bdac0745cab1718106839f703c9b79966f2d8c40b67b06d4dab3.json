{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herbata9\\\\Desktop\\\\Filip\\\\programming\\\\strony\\\\book\\\\client\\\\src\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.css';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  calendarDays\n}) => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [columnDate, setColumnDate] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    if (calendarDays.length > 0) {\n      const firstDate = moment(calendarDays[0].date, 'YYYY-MM-DD').format('YYYY-MM-DD');\n      setColumnDate(firstDate);\n    }\n  }, [calendarDays]);\n  const prevMonth = () => {\n    setCurrentDate(prevDate => {\n      const prevMonthDate = new Date(prevDate);\n      prevMonthDate.setMonth(prevMonthDate.getMonth() - 1);\n      return prevMonthDate;\n    });\n  };\n  const nextMonth = () => {\n    setCurrentDate(prevDate => {\n      const nextMonthDate = new Date(prevDate);\n      nextMonthDate.setMonth(nextMonthDate.getMonth() + 1);\n      return nextMonthDate;\n    });\n  };\n  const handleDayButtonClick = day => {\n    console.log('Button clicked for day:', day);\n    history.push(`/selecthour?day=${day}`);\n  };\n  const month = currentDate.toLocaleString('default', {\n    month: 'long'\n  });\n  const year = currentDate.getFullYear();\n  const generateDaysInMonth = () => {\n    const firstDayOfMonth = new Date(year, currentDate.getMonth(), 1);\n    const lastDayOfMonth = new Date(year, currentDate.getMonth() + 1, 0);\n    const daysInMonth = lastDayOfMonth.getDate();\n    const firstDayOfWeek = firstDayOfMonth.getDay();\n    const today = moment().format('YYYY-MM-DD');\n    const days = [];\n    let currentWeek = [];\n    for (let i = 0; i < firstDayOfWeek; i++) {\n      currentWeek.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"calendar-day\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this));\n    }\n    for (let i = 1; i <= daysInMonth; i++) {\n      const currentDay = moment(new Date(year, currentDate.getMonth(), i)).format('YYYY-MM-DD');\n      const isDayInDatabase = calendarDays.some(day => moment(day.date, 'YYYY-MM-DD').isSame(currentDay));\n      const isFutureDay = currentDay > today;\n      currentWeek.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: `calendar-day ${isDayInDatabase ? 'red' : ''}`,\n        children: isFutureDay ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDayButtonClick(currentDay),\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : i\n      }, `day-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this));\n      if (currentWeek.length === 7 || i === daysInMonth) {\n        days.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: currentWeek\n        }, `week-${days.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this));\n        currentWeek = [];\n      }\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: columnDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevMonth,\n        children: \"Previous Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${month} ${year}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextMonth,\n        children: \"Next Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"calendar-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: generateDaysInMonth()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"hIgrit4Ig4Ewob71GZBWV3Q701s=\", false, function () {\n  return [useHistory];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","useHistory","jsxDEV","_jsxDEV","Calendar","calendarDays","_s","currentDate","setCurrentDate","Date","columnDate","setColumnDate","history","length","firstDate","date","format","prevMonth","prevDate","prevMonthDate","setMonth","getMonth","nextMonth","nextMonthDate","handleDayButtonClick","day","console","log","push","month","toLocaleString","year","getFullYear","generateDaysInMonth","firstDayOfMonth","lastDayOfMonth","daysInMonth","getDate","firstDayOfWeek","getDay","today","days","currentWeek","i","className","fileName","_jsxFileName","lineNumber","columnNumber","currentDay","isDayInDatabase","some","isSame","isFutureDay","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/herbata9/Desktop/Filip/programming/strony/book/client/src/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Calendar.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Calendar = ({ calendarDays }) => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [columnDate, setColumnDate] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (calendarDays.length > 0) {\r\n      const firstDate = moment(calendarDays[0].date, 'YYYY-MM-DD').format('YYYY-MM-DD');\r\n      setColumnDate(firstDate);\r\n    }\r\n  }, [calendarDays]);\r\n\r\n  const prevMonth = () => {\r\n    setCurrentDate(prevDate => {\r\n      const prevMonthDate = new Date(prevDate);\r\n      prevMonthDate.setMonth(prevMonthDate.getMonth() - 1);\r\n      return prevMonthDate;\r\n    });\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentDate(prevDate => {\r\n      const nextMonthDate = new Date(prevDate);\r\n      nextMonthDate.setMonth(nextMonthDate.getMonth() + 1);\r\n      return nextMonthDate;\r\n    });\r\n  };\r\n\r\n  const handleDayButtonClick = (day) => {\r\n    console.log('Button clicked for day:', day);\r\n    history.push(`/selecthour?day=${day}`);\r\n  };\r\n\r\n  const month = currentDate.toLocaleString('default', { month: 'long' });\r\n  const year = currentDate.getFullYear();\r\n\r\n  const generateDaysInMonth = () => {\r\n    const firstDayOfMonth = new Date(year, currentDate.getMonth(), 1);\r\n    const lastDayOfMonth = new Date(year, currentDate.getMonth() + 1, 0);\r\n    const daysInMonth = lastDayOfMonth.getDate();\r\n    const firstDayOfWeek = firstDayOfMonth.getDay();\r\n    const today = moment().format('YYYY-MM-DD');\r\n\r\n    const days = [];\r\n    let currentWeek = [];\r\n\r\n    for (let i = 0; i < firstDayOfWeek; i++) {\r\n      currentWeek.push(<td key={`empty-${i}`} className=\"calendar-day\"></td>);\r\n    }\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      const currentDay = moment(new Date(year, currentDate.getMonth(), i)).format('YYYY-MM-DD');\r\n      const isDayInDatabase = calendarDays.some(day => moment(day.date, 'YYYY-MM-DD').isSame(currentDay));\r\n      const isFutureDay = currentDay > today;\r\n\r\n      currentWeek.push(\r\n        <td key={`day-${i}`} className={`calendar-day ${isDayInDatabase ? 'red' : ''}`}>\r\n          {isFutureDay ? (\r\n            <button onClick={() => handleDayButtonClick(currentDay)}>{i}</button>\r\n          ) : (\r\n            i\r\n          )}\r\n        </td>\r\n      );\r\n\r\n      if (currentWeek.length === 7 || i === daysInMonth) {\r\n        days.push(<tr key={`week-${days.length}`}>{currentWeek}</tr>);\r\n        currentWeek = [];\r\n      }\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{columnDate}</h1>\r\n      <div className=\"calendar-container\">\r\n        <button onClick={prevMonth}>Previous Month</button>\r\n        <h2>{`${month} ${year}`}</h2>\r\n        <button onClick={nextMonth}>Next Month</button>\r\n        <table className=\"calendar-table\">\r\n          <tbody>{generateDaysInMonth()}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}